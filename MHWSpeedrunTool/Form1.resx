<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAACMuAAAjLgAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFAAAASwAAAGEAAABgAAAAYAAAAGAAAABbAAAAFQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA0AAADGAAAA/wEBAf8BAQH/AAAA/wAA
        APIAAAA5AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADQAAAMYUFBT/XFxc/2Nj
        Y/8uLi7/AAAA8gAAADkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANAAAAxhMT
        E/9XV1f/Xl5e/ysrK/8AAADyAAAAOQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AA0AAADGDAwM/zc3N/87Ozv/Gxsb/wAAAPIAAAA5AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGxsbAEtL
        SwAJCQkPAwMDMgAAAEsAAABPAgICOgcHBxgUFBQCDw8PAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAA
        ABUAAAAaAAAAJQAAAMwbGxv/fX19/4eHh/8+Pj7/AAAA9AAAAE0AAAAVAAAABgAAAAAAAAAAGRkZAAIC
        AgAHBwcUAQEBbgEBAcQODg7mHh4e7h8fH+0TExPqAwMD0gAAAIoEBAQmAAAAAA8PDwAAAAAAAAAAAAAA
        AAEAAABqAAAA1QAAANoAAADcAAAA9wMDA/8QEBD/ERER/wgICP8AAAD9AAAA4gAAANkAAACPAAAACgEB
        AQAAAAAABAQELQEBAbkgICDzgYGB9MzMzPTd3d3v2dnZ69fX1/Wbm5vzNjY28wMDA9UBAQFQDQ0NAQQE
        BAAAAAAAAAAAFAAAAMwSEhL/SEhI/0tLS/9MTEz/TExM/0tLS/9MTEz/Ozs7/xUVFf9ISEj/ICAg/wAA
        AOwAAAAwAQEBAAQEBCYBAQHITU1N9tDQ0Ovy8vLv//////39/f37+/v8//////n5+fje3t7peXl59QgI
        COUBAQFNAAAAAA0NDQAAAAAaAAAA1kJCQv/x8fH/+fn5//n5+f/5+fn/+fn5//z8/P/Dw8P/QkJC/+zs
        7P9ycnL/AAAA8gAAADgREREFAAAAo0FBQfbp6en3/////v39/f3//////////////////////v7+/v7+
        /v76+vr7dHR09AICAtAEBAQhBAQEAAAAABYAAADOFhYW/1ZWVv9aWlr/W1tb/1tbW/9ZWVn/Wlpa/0ZG
        Rv8YGBj/VlZW/ycnJ/8AAADuAAAALwAAAEMTExPssrKy5fz8/Pf/////////////////////////////
        //////////////7+/vzY2NjkMDAw8gAAAHwAAAAAAAAAAgAAAHYAAADgAAAA5QAAAOYAAAD5BAQE/xUV
        Ff8WFhb/CgoK/wAAAP4AAADrAAAA5AAAAJsEBAQMAAAAkFBQUPX39/f4/f39/P//////////////////
        /////////////////////////v7+/f7+/viMjIz1AAAAxAkJCRIAAAAAAAAABgAAAB4AAAAkAAAALwAA
        AM4sLCz/zs7O/97e3v9mZmb/AAAA9AAAAFUAAAAfAAAACgoKCgoAAAC+i4uL9P////7/////////////
        ////////6urq+uDg4Pn+/v7+/////////////////////8bGxvQMDAzhAwMDMAAAAAAAAAAAAAAAAAAA
        AAAAAAANAAAAxjMzM//w8PD//////3h4eP8AAADyAAAAOQAAAAADAwMAAgICEgEBAc2Xl5fo+vr69f//
        //////////////39/f1ra2veOjo60unp6fn////////////////8/Pz7ysrK6RUVFekAAABDAAAAAAAA
        AAAAAAAAAAAAAAAAAA0AAADGMzMz//Dw8P//////d3d3/wAAAPIAAAA5AAAAAAcHBwAGBgYQAAAAyZiY
        mPH////8/////////////////////o+Pj+tYWFji9/f3+/////////////////////7Ozs7wERER5gEB
        ATwAAAAAAAAAAAAAAAAAAAAAAAAADQAAAMYzMzP/8PDw//////93d3f/AAAA8gAAADkAAAAADw8PABUV
        FQQAAACscHBw8/////3/////////////////////v7+/9o+Pj+n////+/////////////////////6+v
        r/YFBQXXBgYGIgAAAAAAAAAAAAAAAAAAAAAAAAANAAAAxjMzM//w8PD//////3d3d/8AAADyAAAAOQAA
        AAAdHR0AAAAAAAAAAG4vLy/13d3d7Pn5+ff////////////////Hx8fzm5ub7v////////////////z8
        /Pzu7u7sXl5e9AAAAKYSEhIFAAAAAAAAAAAAAAAAAAAAAAAAAA0AAADGMzMz//Dw8P//////d3d3/wAA
        APIAAAA5AAAAAAAAAAAFBQUABQUFIQMDA9N9fX3s/f39+v///////////////8zMzPiioqLs////////
        /////////////rOzs+wQEBDsAAAATAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADQAAAMYzMzP/8PDw////
        //93d3f/AAAA8gAAADkAAAAAAAAAABAQEAAAAAAAAAAAYxQUFO+pqanz+vr6+Pj4+Pb/////19fX9bW1
        ten/////+/v7+vn5+fbQ0ND0LS0t9gAAAJYLCwsHCAgIAAAAAAAAAAAAAAAAAAAAAAAAAAANAAAAxjMz
        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
        +H/wD///+A////gP///8D////g////////8=
</value>
  </data>
</root>